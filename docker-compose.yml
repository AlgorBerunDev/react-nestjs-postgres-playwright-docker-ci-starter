version: "3"

services:
  dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile.development
    container_name: ${PROJECT_NAME}-dashboard
    command: npm run dev
    environment:
      - WDS_SOCKET_PORT=0
      - PORT=8080
    stdin_open: true
    tty: true
    volumes:
      - ./dashboard/src:/usr/src/app/src
    restart: unless-stopped
    networks:
      - mohirdev-docker-network
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.development
    container_name: ${PROJECT_NAME}-docker-api
    command: npm run start:dev
    volumes:
      - "./backend:/usr/src/app"
      - "node_modules:/usr/src/app/node_modules"
    restart: unless-stopped
    environment:
      - PORT=8081
      - HOST=${BACKEND_HOST}
      - JWT_SECRET_KEY=${BACKEND_JWT_SECRET_KEY}
      - JWT_EXPIRES_IN=${BACKEND_JWT_EXPIRES_IN}
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
    depends_on:
      - db
    networks:
      - mohirdev-docker-network

  db:
    build:
      context: ./db
    container_name: ${PROJECT_NAME}-docker-db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./db/data:/var/lib/postgresql/data
      - ./db/backups:/backups
      - ./db/logs:/var/log
    networks:
      - mohirdev-docker-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PG_ADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PG_ADMIN_PASSWORD}
      PGADMIN_LISTEN_PORT: ${PG_ADMIN_PORT}
    depends_on:
      - db
    networks:
      - mohirdev-docker-network

  nginx:
    image: nginx:stable-alpine
    container_name: ${PROJECT_NAME}-docker-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/development.conf:/etc/nginx/conf.d/nginx.conf
    depends_on:
      - dashboard
      - backend
    networks:
      - mohirdev-docker-network

volumes:
  node_modules:
  db_data:
  db_backups:
  db_logs:
networks:
  mohirdev-docker-network:
    driver: bridge
