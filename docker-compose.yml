version: "3"

services:
  dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile.production
    container_name: ${PROJECT_NAME}-dashboard
    command: npm run dev
    environment:
      - WDS_SOCKET_PORT=0
      - PORT=8080
    stdin_open: true
    tty: true
    volumes:
      - ./dashboard/src:/usr/src/app/src
    restart: unless-stopped
    networks:
      - mohirdev-docker-network
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.production
    container_name: ${PROJECT_NAME}-docker-api
    command: npm run start:dev
    volumes:
      - "./backend:/usr/src/app"
      - "node_modules:/usr/src/app/node_modules"
    restart: unless-stopped
    environment:
      - PORT=3001
      - HOST=http://localhost:3001
      - SECRET_KEY=mysecretkey
      - DATABASE_URL=postgresql://user:12345678@db:5432/mydatabase
    depends_on:
      - db
    networks:
      - mohirdev-docker-network

  db:
    build:
      context: ./db
    container_name: ${PROJECT_NAME}-docker-db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: 12345678
      POSTGRES_DB: mydatabase
    volumes:
      - ./db/data:/var/lib/postgresql/data
      - ./db/backups:/backups
      - ./db/logs:/var/log
    ports:
      - "5432:5432"
    networks:
      - mohirdev-docker-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: 80
    depends_on:
      - db
    networks:
      - mohirdev-docker-network
    ports:
      - "8080:80"

  nginx:
    image: nginx:stable-alpine
    container_name: ${PROJECT_NAME}-docker-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/production.conf:/etc/nginx/conf.d/nginx.conf
    depends_on:
      - dashboard
      - backend
    networks:
      - mohirdev-docker-network

volumes:
  node_modules:
networks:
  mohirdev-docker-network:
    driver: bridge
